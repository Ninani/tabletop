buildscript {
	ext {
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('com.querydsl:querydsl-apt:4.1.4:jpa')
	compile('com.querydsl:querydsl-jpa:4.1.4')
	compile('com.h2database:h2')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile("org.springframework.boot:spring-boot-starter-data-rest")
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('com.allanditzel:spring-security-csrf-token-filter:1.1')
	compile('org.apache.httpcomponents:httpclient:4.5.3')
	compile('com.google.guava:guava:21.0')
	compile("com.querydsl:querydsl-jpa:4.1.4")
	compile("com.querydsl:querydsl-apt:4.1.4:jpa")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

compileJava {
	options.compilerArgs << "-s"
	options.compilerArgs << "$projectDir/src/meta/java"

	doFirst {
		file(new File(projectDir, "src/meta/java")).mkdirs()
	}
}

clean.doLast {
	file(new File(projectDir, "src/meta")).deleteDir()
}

sourceSets {
	generated {
		java {
			srcDir "$projectDir/src/meta/java"
		}
	}
}
